.tercero {
    height: 50vh;
    background-image: url(images/background.jpeg);
    background-position: center center; /* eje x: left center right, eje y: top center bottom */
    background-attachment: fixed;

    /* Margenes  */
    margin-top: 50px;
    margin-bottom: 100px;
    margin-left: 25px;
    margin-right: 25px;

    /* Bordes  */
    border-bottom: darkmagenta;
    border-top: darkred;
    border-width: 10px;
    border-style: solid;
}


h1 {
    color: chocolate;
    background-color: cyan;
    border: 5px;
    border-style: solid;

    /*Padding*/
    padding: 100px 25px 50px 0px; /* se pueden escribir hasta 4 valores que va cambiando los padding en el sentido de las agujas del reloj, evitando utilizar los atributos para cada lado*/
}

.smallimage {
    height: 50vh;
    background-image: url(images/kitten-small.png);
    background-repeat: repeat; /* para imagenes mas pequeñas que el contendedor */
    background-size: contain; /* obliga a que el contenedor muestre la imagen completa */
}

/* POSICIONAMIENTO  */

/* Tipos de displays: none, inline, block, inline-block */

/* el sombrerito es un atajo que nos permite definir que el atributo empiece por el valor que le demos, independientemente por como acabe  */
[class^="box"] {
    background-color: gold;
}

.box0 {
    /* display none nos permite ocultar completament elementos. util para controlar distintos dispositivos y tamaños de pantalla  */
    display: none;
}

/* tenemos que especificar más ya que tanto p como div son elementos de bloque. así nos representa los elemntos de forma inline correctamente  */
.box4, .box5, .box4 p, .box5 p {
    display: inline;
}

.box2, .box3, .box2 p, .box3 p {
    /* inline block nos mostrara los elementos de forma inline pero con connotaciones de bloque, como el margen, borde y padding  */
    display: inline-block;
}

/* por lo general añadiremos estilo al contenedor padre antes que el hijo, ya que el hijo siempre se va a ir adaptando al padre  */
.parent {
    background-color: indianred;
    height: 200px;
    padding: 50px 10px;
    border-style: solid;
}

.child {
    background-color: lightblue;
    height: 50px;
    border-style: dashed;
}

.rectangle {
    background-color: olive;
    height: 50px;
    width: 25%;
}

/* Centrar horizontalmente (eje-x)  */
.x-centered {
    margin: auto;
}

.x-centered p {
    color: darkblue;
    font-size: 40px;
}

/* Posicion relativa  */
.pos-relative {
    position: relative;
    left: 150px;
    bottom: 50px;
    /* z index maneja la capa en la que deseas que este ese estilo  */
    z-index: -1;
}

/* Posicion absoluta  */
.pos-absolute-parent {
    height: 300px;
    border: 15px solid tomato;

    /* con position relative en el elemento padre, los position absolute que haya en los elementos hijo seran relativos al padre  */
    position: relative;
}

.pos-absolute-child {
    height: 50px;
    width: 50px;
    background-color: #333;

    /* position absolute es relativo al html entero. no suele ser comun. para que sea relativo al padre, el elemento padre tiene que ser relative  */
    position: absolute;
    top: 50%;
    right: 50%;
    /* esto es una correcion, ya que el posicionamiento del 50% lo hace respecto a la esquina superior izquierda. no es comun que lo hagamos asi */
    margin-right: -25px; /* es la mitad del tamaño del elemento*/
    margin-top: -25px;
}

/* Posicion fija / fixed  */
.pos-fixed {
    background-color: rgb(52, 228, 36);
    padding: 20px 30px;

    /* position fixed se fija respecto a la ventana, independientemente del scroll  */
    position: fixed;
    bottom: 30px;
    right: 30px;
}

.pos-fixed a {
    color: crimson;
    text-decoration: none;
}

/* Posicion sticky  */
.pos-sticky {
    background-color: darkkhaki;
    padding: 15px 25px;

    position: sticky;
    top: 0;
}

.pos-sticky a {
    color: darkmagenta;
    text-decoration: none;
}

/* Posicion flotante  */
.pos-float-parent {
    border: 5px solid;
    overflow: hidden; /*overflow hace que el padre respete todos los hijos, sean flotantes o no*/
}

.pos-float-child-1 {
    background-color: darkorange;
    height: 100px;
    width: 33.3%;

    float: left;
}

.pos-float-child-2 {
    background-color: tomato;
    height: 100px;
    width: 33.3%;

    float: right;
}

.pos-float-child-3 {
    background-color: greenyellow;
    height: 50px;
    width: 100%;
}

.pos-float-child-4 {
    background-color: cyan;
    height: 100px;
    width: 100%;
    clear: both;
}

/* Overflow - Gestion del desbordamiento del contenido */
[class^="overflow-parent"] {
    width: 200px;
    height: 100px;
    border: 5px dashed;
    margin-bottom: 50px;
}

.overflow-parent-1 {
    overflow: hidden;
}

.overflow-parent-2 {
    overflow: visible;
}

.overflow-parent-3 {
    overflow: scroll;
}

/* Tamaño de cajas (box sizing)  */
.box-sizing-parent {
    width: 200px;
    height: 200px;
    border: 10px solid salmon;
}

.box-sizing-child {
    width: 100%;
    height: 50px;
    background-color: sienna;
    border: 10px solid;

    box-sizing: content-box; /*valor por defecto. se ajusta al contenido, pudiendo excederse como en este caso justamente un borde*/
}

.border-box {
    margin-top: 10px;

    box-sizing: border-box; /*se ajusta solo hasta el borde del padre*/
}